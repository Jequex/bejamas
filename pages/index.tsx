import type {NextPage} from 'next'
import {useState, useEffect} from "react";
import {BsCart2} from "react-icons/bs";
import {FaGreaterThan, FaLessThan} from "react-icons/fa";
import {BiSort} from "react-icons/bi";
import axios from "axios";
import Head from 'next/head'
import Image from 'next/image'

const Home: NextPage = () => {
  type Image = {
    src: string,
    alt: string
  };
  type Dimensions = {
    width: number,
    height: number
  };
  type Recommendations = {
    src: string,
    alt: string
  };
  type Details = {
    dimmentions: Dimensions,
    description?: string,
    size?: number,
    recommendations?: Recommendations[]
  };

  type Products = {
    name: string,
    category?: string,
    price: number,
    currency?: string,
    bestseller?: boolean,
    featured?: boolean,
    image: Image,
    details?: Details | null
  }

  type Data = {
    data: {
      products: Products[]
    }
  }

  const [products, setProducts] = useState<Products[]>([]);
  const [featured, setFeatured] = useState<Products[]>();
  const [hoveredOn, setHoveredOn] = useState<number>();
  const [page, setPage] = useState<number>(1);
  const [toShow, setToShow] = useState<Products[]>([]);
  const [cart, setCart] = useState<Products[]>([]);
  const [showCart, setShowCart] = useState<boolean>(false);

  const hover = (id: number) => {
      setHoveredOn(id);
  }

  const addToCart = (product: Products) => {
    setCart([...cart, product]);
    setShowCart(true);
  }

  const hideCart = () => {
    setShowCart(false);
  }

  const seeCart = () => {
    setShowCart(true);
  }

  const resetCart = () => {
    setCart([]);
  }

  const sortByPrice = () => {
    const temp = products.sort((a, b) => a.price - b.price);
    setProducts(temp);
    setItemsToShow();
  }

  const sortAlphabetically = () => {
    const temp = products.sort((a, b) => {
      if (a.name < b.name) {
        return - 1;
      } else {
        return  1;
      }
    })
    setProducts(temp);
    setItemsToShow();
  }

  const setItemsToShow = () => {
    const last = page * 5;
    const first = last - 5;
    const items = products.filter((a, i) => i <= last && i >= first);
    setToShow(items);
  }

  const setPagination = (type: string) => {
    if (type === 'add' && !(page * 5 > products.length)) {
      const newPage = page + 1;
      setPage(newPage);
    }
    if (type === 'remove' && !(page < 2)) {
      const newPage = page - 1;
      setPage(newPage);
    }
  }

  const getData: () => Promise<void> = async () => {
    const data: Data = await axios.get('http://localhost:5000/');
    setProducts(data.data.products.filter(a => !a.featured));
    setFeatured(data.data.products.filter(a => a.featured));
    setItemsToShow();
  }

  useEffect(() => {
    getData().then(r => r);
  }, []);

  useEffect(() => setItemsToShow(), [products, page]);

  return (
    <div className='container'>
      <Head>
        <title>Bejamas App</title>
        <meta name="description" content="Generated by create next app"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>

      <header>
        <div className='row my-2'>
          <div className='col text-start' style={{fontSize: '4vh'}}><strong>BEJAMAS_</strong></div>
          <div className='col text-end' style={{fontSize: '4vh'}}>
            <div style={{position: 'relative'}}><BsCart2/></div>
            {/*<div style={{position: 'absolute', width: '30px', height: '30px', backgroundColor: 'blue', top: '0px'}}></div>*/}
          </div>
        </div>
        <hr/>
      </header>

      <main>
        {
          featured?.map(a => (
            <>
              <div className='row'>
                <div style={{fontSize: '3vh'}} className='col-lg-10 col-sm-12'><strong>{a.name}</strong></div>
                <div className='col-lg-2 col-sm-12 text-end'>
                  <button className='btn btn-dark' onClick={() => addToCart(a)}>ADD TO CART</button>
                </div>
              </div>
              <div className='my-4' style={{display: 'block', position: 'relative'}}>
                <Image layout='responsive' src={a.image.src} alt='' width='200' height='80'></Image>
                <div className='bg-white text-dark text-center' style={{position: 'absolute', bottom: '0px', width: '30%', fontSize: '2vh'}}><strong>Photo of the day</strong></div>
              </div>
              <div className='row'>
                <div className='col-sm-12 col-lg-8'>
                  <div className='my-1'><strong>About the {a.name}</strong></div>
                  <div className='my-1 text-secondary'><strong>{a.category?.slice(0, 1).toUpperCase()}{a.category?.slice(1)}</strong></div>
                  <div>{a.details?.description}</div>
                </div>
                <div className='col-lg-4 col-sm-12 text-end'>
                  <div className='my-2'><strong>People also buy</strong></div>
                  <div className='row my-2'>{a.details?.recommendations?.map((b, j) => (
                    <div key={j} className='col'>
                      <Image src={b.src} alt={b.alt} layout='responsive' height='3' width='2'></Image>
                    </div>
                  ))}</div>
                  <div className='my-1'><strong>Details</strong></div>
                  <div><>Size: {a.details?.dimmentions.width} * {a.details?.dimmentions.height} pixel</>
                  </div>
                  <div><>Size: {a.details?.size && a.details?.size / 1000} mb</>
                  </div>
                </div>
              </div>
            </>
          ))
        }
        <hr/>
        <div className='d-flex flex-row justify-content-between'>
          <div>Photography/Premium Photos</div>
          <div className='row mb-3'>
            <div className='col' onClick={sortAlphabetically}><BiSort />Sort</div>
            <div className='col'>
              <select className='form-select' onInput={sortByPrice}>
                <option>Price</option>
                <option>Price</option>
              </select>
            </div>
          </div>
        </div>
        <div className='row'>
          <div className='col-2'>
            <div className='my-2'>Category</div>
            <div className='d-flex flex-column'>
              <div className='form-group m-1'><input type='checkbox'/>People</div>
              <div className='form-group m-1'><input type='checkbox'/>Premium</div>
              <div className='form-group m-1'><input type='checkbox'/>Pets</div>
              <div className='form-group m-1'><input type='checkbox'/>Food</div>
              <div className='form-group m-1'><input type='checkbox'/>Landmarks</div>
              <div className='form-group m-1'><input type='checkbox'/>Cities</div>
              <div className='form-group m-1'><input type='checkbox'/>Nature</div>
            </div>
            <hr />
            <div className='my-2'>Price Range</div>
            <div className='d-flex flex-column'>
              <div className='form-group m-1'><input type='checkbox'/>Lower than $20</div>
              <div className='form-group m-1'><input type='checkbox'/>$20 - $100</div>
              <div className='form-group m-1'><input type='checkbox'/>$100 - $200</div>
              <div className='form-group m-1'><input type='checkbox'/>More than $200</div>
            </div>
          </div>
          <div className='col-md-10'>
            <div className='row'>{toShow.map((a, i) => (
              <div className='col-sm-12 col-md-6 col-lg-4 mb-5' key={i}>
                <div style={{position: 'relative', textAlign: 'center'}}>
                  <Image src={a.image.src} alt={a.image.alt} layout='responsive' height='5' width='4' onMouseOver={() => hover(i)}></Image>
                  {a.bestseller && (<div className='bg-white text-dark' style={{position: 'absolute', top: '0px', width: '50%'}}>Best Seller</div>)}
                  <button className='form-control btn-dark'
                          onClick={() => addToCart(a)}
                          style={{position: 'absolute', bottom: '0px', visibility: hoveredOn === i ? 'visible' : 'hidden'}}>
                    ADD TO CART
                  </button>
                </div>
                <div>
                  <div className='text-secondary'><strong>{a.category?.slice(0, 1).toUpperCase()}{a.category?.slice(1)}</strong></div>
                  <div><strong>{a.name}</strong></div>
                  <div className='text-secondary'>{a.currency === 'USD' && '$'}{a.price}</div>
                </div>
              </div>
            ))}</div>
          </div>
        </div>
      </main>

      <footer className='m-4'>
        <div className='d-flex flex-row justify-content-center'>
          <span style={{cursor: 'pointer', color: page === 1 ? 'gray' : 'black'}} onClick={() => setPagination('remove')} className='mx-2'><FaLessThan /></span>
          <span>{page}</span>
          <span style={{cursor: 'pointer', color: page * 5 >= products.length ? 'gray' : 'black'}} onClick={() => setPagination('add')} className='mx-2'><FaGreaterThan /></span>
        </div>
      </footer>

    </div>
  )
}

export default Home
